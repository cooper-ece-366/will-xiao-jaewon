<?xml version="1.0" encoding="UTF-8"?>
<!-- Reference: exempli-gratia -->
<project>
	<modelVersion>4.0.0</modelVersion>
	<artifactId>project-dove</artifactId>
	<groupId>edu.cooper.ece366</groupId>
	<version>0.0.1</version>
	<modules>
		<module>dove-service</module>
		<!-- <module>yahoofinance-api</module> -->
	</modules>
	<name>${project.artifactId}</name>
	<packaging>pom</packaging>

	<properties>
		<java.version>17</java.version>
		<maven.compiler.source>${java.version}</maven.compiler.source>
		<maven.compiler.target>${java.version}</maven.compiler.target>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<javadoc.opts>-Xdoclint:none</javadoc.opts>
		<!-- The two below configurations prevent us from having to import the compiler plugin -->

		<!-- Dependency version declarations -->
		<!-- TODO: Find packages to use at https://mvnrepository.com/ -->
		<maven-release-plugin.version>2.5.3</maven-release-plugin.version>
		<maven-jar-plugin.version>3.2.0</maven-jar-plugin.version>
		<maven-compiler-plugin.version>3.8.1</maven-compiler-plugin.version>
		<maven-resources-plugin.version>3.2.0</maven-resources-plugin.version>
		<maven-assembly-plugin.version>3.3.0</maven-assembly-plugin.version>
		<maven-javadoc-plugin.version>3.2.0</maven-javadoc-plugin.version>
		<maven-dependency-plugin.version>3.1.2</maven-dependency-plugin.version>
		<maven-surefire-plugin.version>3.0.0-M5</maven-surefire-plugin.version>
		<maven-shade-plugin.version>3.2.4</maven-shade-plugin.version>
		<exec-maven-plugin.version>3.0.0</exec-maven-plugin.version>
		<ece366-commons.version>${project.version}</ece366-commons.version>
		<single-node-threaded-app.version>${project.version}</single-node-threaded-app.version>

		<log4j.version>2.17.1</log4j.version>
		<logback.version>1.2.10</logback.version>
		<slf4j.version>1.7.33</slf4j.version>
		<junit-version>4.13.1</junit-version>
		<testng.version>7.3.0</testng.version>
		<jackson.version>2.13.1</jackson.version>
<!--
		<yahoo-finance.version>3.16.0-SNAPSHOT</yahoo-finance.version>
-->
		<spring.boot.version>2.6.3</spring.boot.version>
		<spring.webmvc.version>5.3.15</spring.webmvc.version>
<!--
		<apache.commons.logging.version>1.0.4.v200706111724</apache.commons.logging.version>
-->
		<apache.commons.imaging.version>1.0</apache.commons.imaging.version>
		<gson.version>2.2.4</gson.version>
		<lombok.version>1.18.22</lombok.version>
	</properties>

<!--
	<repositories>
		<repository>
			<id>mvnrepository</id>
			<name>mvnrepository</name>
			<url>http://www.mvnrepository.com</url>
		</repository>
		<repository>
			<id>maven-repo</id>
			<url>https://repo.maven.apache.org/maven2</url>
		</repository>
		<repository>
			<id>scijava-repo</id>
			<url>https://maven.imagej.net/content/repositories/public/</url>
		</repository>
	</repositories>
-->

	<scm>
		<url>git@github.com:cooper-ece-366/will-xiao-jaewon.git</url>
		<connection>git@github.com:cooper-ece-366/will-xiao-jaewon.git</connection>
		<developerConnection>scm:git:git@github.com:cooper-ece-366/will-xiao-jaewon.git</developerConnection>
		<tag>HEAD</tag>
	</scm>

	<distributionManagement>
		<repository>
			<id>aws-release</id>
			<name>AWS Release Repository</name>
			<url>s3://edu.cooper.ece366/release</url>
		</repository>
		<snapshotRepository>
			<id>aws-snapshot</id>
			<name>AWS Snapshot Repository</name>
			<url>s3://edu.cooper.ece366/snapshot</url>
		</snapshotRepository>
	</distributionManagement>

	<pluginRepositories>
		<pluginRepository>
			<id>spring-snapshots</id>
			<url>https://repo.spring.io/snapshot</url>
		</pluginRepository>
		<pluginRepository>
			<id>spring-milestones</id>
			<url>https://repo.spring.io/milestone</url>
		</pluginRepository>
	</pluginRepositories>


	<dependencyManagement>
		<dependencies>
			<dependency>
				<!-- Import dependency management from Spring Boot -->
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-dependencies</artifactId>
				<version>${spring.boot.version}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
			<dependency>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-starter-web</artifactId>
				<version>${spring.boot.version}</version>
			</dependency>
			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>spring-webmvc</artifactId>
				<version>${spring.webmvc.version}</version>
			</dependency>

			<!--
                        <dependency>
                            <groupId>edu.cooper.ece366</groupId>
                            <artifactId>commons</artifactId>
                            <version>${ece366-commons.version}</version>
                        </dependency>
            -->
			<dependency>
				<groupId>junit</groupId>
				<artifactId>junit</artifactId>
				<version>${junit-version}</version>
				<scope>test</scope>
			</dependency>
			<dependency>
				<groupId>org.testng</groupId>
				<artifactId>testng</artifactId>
				<version>${testng.version}</version>
				<scope>test</scope>
			</dependency>
			<dependency>
				<groupId>ch.qos.logback</groupId>
				<artifactId>logback-core</artifactId>
				<version>${logback.version}</version>
			</dependency>
			<dependency>
				<groupId>ch.qos.logback</groupId>
				<artifactId>logback-classic</artifactId>
				<version>${logback.version}</version>
			</dependency>
			<dependency>
				<groupId>org.slf4j</groupId>
				<artifactId>slf4j-api</artifactId>
				<version>${slf4j.version}</version>
			</dependency>
			<dependency>
				<groupId>org.projectlombok</groupId>
				<artifactId>lombok</artifactId>
				<version>${lombok.version}</version>
				<scope>provided</scope>
			</dependency>
			<dependency>
				<groupId>javax.persistence</groupId>
				<artifactId>javax.persistence-api</artifactId>
				<version>2.2</version>
			</dependency>
			<!--
                        <dependency>
                            <groupId>org.apache.commons</groupId>
                            <artifactId>commons-imaging</artifactId>
                            <version>${apache.commons.imaging.version}</version>
                        </dependency>
                        <dependency>
                            <groupId>com.google.code.gson</groupId>
                            <artifactId>gson</artifactId>
                            <version>${gson.version}</version>
                        </dependency>

			<dependency>
				<groupId>edu.cooper.ece366.yahoofinance</groupId>
				<artifactId>api</artifactId>
				<version>${yahoo-finance.version}</version>
			</dependency>
			-->
			<dependency>
				<groupId>com.fasterxml.jackson.core</groupId>
				<artifactId>jackson-databind</artifactId>
				<version>${jackson.version}</version>
			</dependency>
		</dependencies>
	</dependencyManagement>

	<build>
		<pluginManagement>
			<plugins>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-compiler-plugin</artifactId>
					<version>${maven-compiler-plugin.version}</version>
					<configuration>
						<source>${maven.compiler.source}</source>
						<target>${maven.compiler.target}</target>
					</configuration>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-resources-plugin</artifactId>
					<version>${maven-resources-plugin.version}</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-assembly-plugin</artifactId>
					<version>${maven-assembly-plugin.version}</version>
					<configuration>
						<descriptorRefs>
							<descriptorRef>jar-with-dependencies</descriptorRef>
						</descriptorRefs>
					</configuration>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-jar-plugin</artifactId>
					<version>${maven-jar-plugin.version}</version>
					<configuration>
					</configuration>
					<executions>
						<execution>
							<goals>
								<goal>test-jar</goal>
							</goals>
						</execution>
					</executions>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-javadoc-plugin</artifactId>
					<version>${maven-javadoc-plugin.version}</version>
					<executions>
						<execution>
							<id>attach-javadocs</id>
							<configuration>
								<additionalparam>${javadoc.opts}</additionalparam>
							</configuration>
						</execution>
					</executions>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-surefire-plugin</artifactId>
					<version>${maven-surefire-plugin.version}</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-dependency-plugin</artifactId>
					<version>${maven-dependency-plugin.version}</version>
					<executions>
						<execution>
							<phase>package</phase>
							<goals>
								<goal>copy-dependencies</goal>
							</goals>
							<configuration>
								<outputDirectory>${project.build.directory}/classpathDependencies</outputDirectory>
							</configuration>
						</execution>
					</executions>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-shade-plugin</artifactId>
					<version>${maven-shade-plugin.version}</version>
					<dependencies>
						<dependency>
							<groupId>org.springframework.boot</groupId>
							<artifactId>spring-boot-maven-plugin</artifactId>
							<version>${spring.boot.version}</version>
						</dependency>
					</dependencies>
					<configuration>
						<createDependencyReducedPom>false</createDependencyReducedPom>
						<filters>
							<filter>
								<artifact>*:*</artifact>
								<excludes>
									<exclude>**/Log4j2Plugins.dat</exclude>
								</excludes>
							</filter>
						</filters>
					</configuration>
					<executions>
						<execution>
							<phase>package</phase>
							<goals>
								<goal>shade</goal>
							</goals>
							<configuration>
								<transformers>
									<transformer
											implementation="org.apache.maven.plugins.shade.resource.AppendingTransformer">
										<resource>META-INF/spring.handlers</resource>
									</transformer>
									<transformer
											implementation="org.springframework.boot.maven.PropertiesMergingResourceTransformer">
										<resource>META-INF/spring.factories</resource>
									</transformer>
									<transformer
											implementation="org.apache.maven.plugins.shade.resource.AppendingTransformer">
										<resource>META-INF/spring.schemas</resource>
									</transformer>
									<transformer
											implementation="org.apache.maven.plugins.shade.resource.ServicesResourceTransformer"/>
								</transformers>
								<artifactSet>
									<excludes>
										<exclude>org.apache.tomcat.embed:*</exclude>
									</excludes>
								</artifactSet>
							</configuration>
						</execution>
					</executions>
				</plugin>
				<plugin>
				  <groupId>org.codehaus.mojo</groupId>
				  <artifactId>exec-maven-plugin</artifactId>
				  <version>${exec-maven-plugin.version}</version>
				</plugin>
				<plugin>
					<groupId>org.springframework.boot</groupId>
					<artifactId>spring-boot-maven-plugin</artifactId>
					<version>${spring.boot.version}</version>
				</plugin>
			</plugins>
		</pluginManagement>
	</build>
	<profiles>
		<!-- This profile can be run as: mvn clean package -N -P classpath-deps -->
		<!-- Used to pull all classpath libraries into this parent /target/classpathDependencies 
			folder -->
		<profile>
			<id>classpath-deps</id>
			<modules>
				<module>dove-service</module>
				<!-- <module>yahoofinance-api</module> -->
			</modules>
			<build>
				<plugins>
					<plugin>
						<groupId>org.springframework.boot</groupId>
						<artifactId>spring-boot-maven-plugin</artifactId>
						<version>${spring.boot.version}</version>
						<configuration>
							<excludes>
								<exclude>
									<groupId>org.projectlombok</groupId>
									<artifactId>lombok</artifactId>
								</exclude>
							</excludes>
						</configuration>
					</plugin>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-dependency-plugin</artifactId>
						<executions>
							<execution>
								<phase>package</phase>
								<goals>
									<goal>copy-dependencies</goal>
								</goals>
								<configuration>
									<outputDirectory>${project.build.directory}/classpathDependencies</outputDirectory>
								</configuration>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
			<dependencies>
				<dependency>
					<!-- Import dependency management from Spring Boot -->
					<groupId>org.springframework.boot</groupId>
					<artifactId>spring-boot-dependencies</artifactId>
					<version>${spring.boot.version}</version>
					<type>pom</type>
					<scope>import</scope>
				</dependency>
				<dependency>
					<groupId>org.springframework.boot</groupId>
					<artifactId>spring-boot-starter-web</artifactId>
					<version>${spring.boot.version}</version>
				</dependency>
				<dependency>
					<groupId>org.springframework</groupId>
					<artifactId>spring-webmvc</artifactId>
					<version>${spring.webmvc.version}</version>
				</dependency>
				<dependency>
					<groupId>junit</groupId>
					<artifactId>junit</artifactId>
					<scope>test</scope>
				</dependency>
				<dependency>
					<groupId>org.testng</groupId>
					<artifactId>testng</artifactId>
					<scope>test</scope>
				</dependency>
				<dependency>
					<groupId>ch.qos.logback</groupId>
					<artifactId>logback-core</artifactId>
				</dependency>
				<dependency>
					<groupId>ch.qos.logback</groupId>
					<artifactId>logback-classic</artifactId>
					<scope>test</scope>
				</dependency>
				<dependency>
					<groupId>commons-dbutils</groupId>
					<artifactId>commons-dbutils</artifactId>
					<version>1.5</version>
				</dependency>
<!--				<dependency>-->
<!--					<groupId>com.google.code.gson</groupId>-->
<!--					<artifactId>gson</artifactId>-->
<!--					<version>2.5</version>-->
<!--				</dependency>-->
				<dependency>
					<groupId>mysql</groupId>
					<artifactId>mysql-connector-java</artifactId>
					<version>8.0.28</version>
				</dependency>
				<dependency>
					<groupId>javax.persistence</groupId>
					<artifactId>javax.persistence-api</artifactId>
					<version>2.2</version>
				</dependency>
				<dependency>
					<groupId>org.slf4j</groupId>
					<artifactId>slf4j-api</artifactId>
					<scope>test</scope>
				</dependency>
				<dependency>
					<groupId>org.projectlombok</groupId>
					<artifactId>lombok</artifactId>
				</dependency>
				<dependency>
					<groupId>com.fasterxml.jackson.core</groupId>
					<artifactId>jackson-databind</artifactId>
				</dependency>
			</dependencies>
		</profile>

		<!-- Default build profile (builds all in project) -->
		<profile>
			<id>default</id>
			<activation>
				<activeByDefault>true</activeByDefault>
			</activation>
			<modules>
				<module>dove-service</module>
				<!-- <module>yahoofinance-api</module> -->
			</modules>
		</profile>

		<!-- to build uber jars -->
		<profile>
			<id>uber</id>
			<modules>
				<module>dove-service</module>
				<!-- <module>yahoofinance-api</module> -->
			</modules>
			<build>
				<plugins>
					<plugin>
						<groupId>org.springframework.boot</groupId>
						<artifactId>spring-boot-maven-plugin</artifactId>
						<version>${spring.boot.version}</version>
						<configuration>
							<excludes>
								<exclude>
									<groupId>org.projectlombok</groupId>
									<artifactId>lombok</artifactId>
								</exclude>
							</excludes>
						</configuration>
					</plugin>

					<!-- To be removed once commons project is properly implemented -->
					<!-- see https://maven.apache.org/guides/mini/guide-assemblies.html -->
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-assembly-plugin</artifactId>
						<configuration>
							<descriptorRefs>
								<descriptorRef>jar-with-dependencies</descriptorRef>
							</descriptorRefs>
						</configuration>
						<executions>
							<execution>
								<id>make-assembly</id> <!-- this is used for inheritance merges -->
								<phase>package</phase> <!-- bind to the packaging phase -->
								<goals>
									<goal>single</goal>
								</goals>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
	</profiles>

</project>
